package Kinohod::Model::DB;

use strict;
use base 'Catalyst::Model::DBIC::Schema';

use YAML::XS qw(LoadFile);
use Kinohod::Model::Validate;

my $config = LoadFile($ENV{KINOHOD_CONFIG});

__PACKAGE__->config(
    name => 'Kinohod',
    schema_class => $config->{'Model::PostgreSQL'}->{schema_class},
    connect_info => $config->{'Model::PostgreSQL'}->{connect_info},
);

sub validator {
    my $self = shift;

    unless ( exists $self->{validator} ){
        $self->{validator} = Kinohod::Model::Validate->new();
    }

    return $self->{validator};
}

sub to_hash {
    my ( $self, $item ) = @_;

    return { map { $_ => $item->$_ }
             grep { !$item->column_info($_)->{private} }
             $item->columns
           };
}

=head1 NAME

Kinohod::Model::DB - Catalyst DBIC Schema Model

=head1 SYNOPSIS

See L<Kinohod>

=head1 DESCRIPTION

L<Catalyst::Model::DBIC::Schema> Model using schema L<Kinohod::Model::Schema>

=head1 GENERATED BY

Catalyst::Helper::Model::DBIC::Schema - 0.65

=head1 AUTHOR

Tigran

=head1 LICENSE

This library is free software, you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut

1;
